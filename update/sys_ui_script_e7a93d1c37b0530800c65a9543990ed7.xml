<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <name>x_regho_ngt.sortapp</name>
        <script><![CDATA[var formValue='';
var	pc ='pc026409';
	
angular.module('sortApp', [])
		.controller('mainController', function($scope) {
	  $scope.sortType     = 'Software'; // set the default sort type
	  $scope.sortReverse  = false;  // set the default sort order
	  $scope.searchSoftware   = '';     // set the default search/filter term
		  $scope.pc   = '';
jslog('******* 1. load');  
    $scope.swlist = [];
	var ga = new GlideAjax('global.RegH_Ess');
    ga.addParam('sysparm_name', 'getSoftwareOnPc');
    ga.addParam('sysparm_ci', pc);
	ga.addParam('sysparm_sync', "s");
	ga.getXMLWait();

	var result=ga.getAnswer();
	var obj = JSON.parse(result);
//	
// Create table
//
//  for (i = 0; i != obj.length; i++){
	for (i = 0; i != 10; i++){

	  var x={ 'Software': obj[i].name, 'Version': obj[i].version, 'Fabrikant': obj[i].manufacturer, 'approve': obj[i].approve, 'accept' : false, 'reject' : false, 'idx' : i};
	  $scope.swlist.push(x);
	}
	  
$scope.accept = function (idx) {
		//my function to accept
		var i = $scope.swlist[idx];
		g_form.setValue('accept', 'swlist: '+ $scope.swlist[idx].Software+' idx: '+$scope.swlist[idx].idx);
        i.accept = true;
        i.refuse = false;
    };

$scope.refuse = function (idx) {
        //my function to refuse
        var i = $scope.swlist[idx];
		g_form.setValue('refuse', 'swlist: '+ $scope.swlist[idx].Software+' idx: '+$scope.swlist[idx].idx);
        i.refuse = true;
        i.accept = false;
    };	

	
$scope.checkbox = function (idx, value) {
	console.log('getControl (swUdenGodkendelse): '+g_form.getControl('swUdenGodkendelse'));
	console.log('getControl (swMedGodkendelseMedEAN): '+g_form.getControl('swMedGodkMEan'));
	console.log('getControl (Licens): '+g_form.getControl('swHarLicens'));
	console.log('getControl (Pc): '+g_form.getControl('pc'));
	
	
    //my function to refuse
    var i = $scope.swlist[idx];
	if ($scope.swlist[idx].Fabrikant == 'CIMT - Application Management'){
	formValue=g_form.getValue('swUdenGodkendelse');
	if (!value)
		formValue = formValue.replace($scope.swlist[idx].Software+'\n','');
	else
		formValue+=$scope.swlist[idx].Software+'\n';
	g_form.setValue('swUdenGodkendelse',formValue);	
	
    }
else{
	formValue=g_form.getValue('swMedGodkMEan');
	if (!value)
		formValue = formValue.replace($scope.swlist[idx].Software+'\n','');
	else
		formValue+=$scope.swlist[idx].Software+'\n';
	g_form.setValue('swMedGodkMEan',formValue);	
	}	 
};	  
	
$scope.searchpc = function (pc2) {
        //my function to refuse
	jslog('******* Search pc'); 
	
	jslog('*********** Pc: '+$scope.pc+' - '+ pc2);
//	delete $scope.pcswlist.value;

	if (!$scope.pc)
		return;

////////////////	
	
	
    $scope.status = '  ';	
    $scope.swlist = [];
	var ga = new GlideAjax('global.RegH_Ess');
    ga.addParam('sysparm_name', 'getSoftwareOnPc');
    ga.addParam('sysparm_ci', $scope.pc);
	ga.addParam('sysparm_sync', "s");
	ga.getXMLWait();

	var result=ga.getAnswer();
	var obj = JSON.parse(result);
	
	
//	
// Create table
//
//  for (i = 0; i != obj.length; i++){
for (i = 0; i != 10; i++){

	  var x={ 'Software': obj[i].name, 'Version': obj[i].version, 'Fabrikant': obj[i].manufacturer, 'approve': obj[i].approve, 'accept' : false, 'reject' : false, 'idx' : i};
	  $scope.swlist.push(x);
	}
$scope.pc='fundet';
	return;	
};
});]]></script>
        <script_name>sortapp</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>jhan0435</sys_created_by>
        <sys_created_on>2018-03-08 08:44:41</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e7a93d1c37b0530800c65a9543990ed7</sys_id>
        <sys_mod_count>22</sys_mod_count>
        <sys_name>x_regho_ngt.sortapp</sys_name>
        <sys_package display_value="ngt" source="x_regho_ngt">1c139cc437749fc400c65a9543990e2f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="ngt">1c139cc437749fc400c65a9543990e2f</sys_scope>
        <sys_update_name>sys_ui_script_e7a93d1c37b0530800c65a9543990ed7</sys_update_name>
        <sys_updated_by>jhan0435</sys_updated_by>
        <sys_updated_on>2018-03-09 13:20:05</sys_updated_on>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
